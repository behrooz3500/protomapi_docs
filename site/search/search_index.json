{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PROTOMAPI: Moein API Proto Project layout mkdocs.yml # The configuration file. docs/ pages/ config invoice log person product user index.md # The documentation homepage.","title":"index"},{"location":"#protomapi","text":"Moein API Proto","title":"PROTOMAPI:"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ pages/ config invoice log person product user index.md # The documentation homepage.","title":"Project layout"},{"location":"pages/config/config/","text":"Config Table Attribute Type Description Required name string(255) \u2713 app_version string(255) eg: 1.1.1 \u2717 app_version_int int eg: 111 \u2717 app_download_link url https://apps... \u2717 app_about string(1000) \u2717 app_changelog string(4000) \u2717 app_force_update bool \u2717 app_force_update_note string(1000) \u2717 support_tel1 string(50) \u2717 support_tel2 string(50) \u2717 support_tel3 string(50) \u2717 support_email string(255) \u2717 support_address string(500 \u2717 support_online_chat url \u2717 1- Retrieving Config Details: Method GET Endpoint /api/config Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/config')","title":"config"},{"location":"pages/invoice/all_invoice/","text":"Invoice Table: Attribute Type Description Required id int primary_key, read_only \u2717 mid int Moein id \u2717 code int Moein factor_No \u2717 type int pre: 0 buy: 1 sell: 2 \u2717 status int draft: 0 publish: 1 \u2713 created_at string(iso-8601) read_only \u2717 updated_at string(iso-8601) read_only \u2717 info string(500) \u2717 discount positive-int \u2713 discount_percent float \u2713 carry_price positive-int \u2713 driver_name string(100) \u2717 driver_tel string(50) \u2717 carry_info string(500) \u2717 carry_vehicle string(50) \u2717 carry_vehicle_plate string(50) \u2717 carry_vehicle_color string(50) \u2717 tel string(100) additional tel for customer \u2717 address string(255) additional address for customer \u2717 person int Person mid, customer \u2717 temp_person int TempPerson id, customer \u2717 visitor int Person mid \u2717 driver int Person mid \u2717 user int User id, read_only \u2717 total int read_only \u2717 items_sum int read_only \u2717 items_total int read_only \u2717 items_net int read_only \u2717 items_discount int read_only \u2717 remain int read_only \u2717 tax int read_only \u2717 tax_percent float read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 InvoiceItem Table: Attribute Type Description Required id int primary_key, read_only \u2717 price positive-int unit price \u2713 quantity1 int \u2713 quantity2 int \u2713 discount positive-int \u2713 discount_percent float \u2713 discount_per_item positive-int \u2713 info string(500) \u2717 product int Product mid \u2713 repository int Repository mid \u2713 price_level int PriceLevel mid \u2713 unit2_in_unit1 int read_only \u2717 quantity int q2 + (q1 * u2_in_u1) \u2717 sum int read_only \u2717 net int read_only \u2717 tax int read_only \u2717 total int read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 1- Creating An Invoice Details: Method POST Endpoint /api/all_invoices Success code 201 Failure code 400 Example: data = { 'status': 0, 'discount': 1000, 'discount_percent': 0.0, 'carry_price': 100, 'visitor': 109, 'person': 78, 'info': 'invoice information', 'items': [ { 'price': 100, 'quantity1': 0, 'quantity2': 5, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'info': 'some info', 'product': 9, 'repository': 1, 'price_level': 1 }, { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 40, 'discount_percent': 10.0, 'discount_per_item': 20, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.post('http://domain/api/all_invoices', json=data) 2- Listing Invoices: Details: Method GET Endpoint /api/all_invoices Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning status int invoice status Example 1: r = requests.get('http://domain/api/all_invoices') Example 2: params = { 'limit': 50, 'offset': 10, 'status': 1 } r = requests.get('http://domain/api/all_invoices', params=params) 3- Retrieving An Invoice: Details: Method GET Endpoint /api/all_invoices/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/all_invoices/66') 4- Updating An Invoice: Details: Method PUT Endpoint /api/all_invoices/{id} Success code 200 Failure code 400 Example: data = { 'status': 1, 'visitor': 109, 'person': 78, 'items': [ { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.put('http://domain/api/all_invoices/66', json=data) 5- Deleting An Invoice: Details: Method DELETE Endpoint /api/all_invoices/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/all_invoices/66')","title":"all_invoice"},{"location":"pages/invoice/all_invoice_mid_base/","text":"Invoice Table: Attribute Type Description Required id int primary_key, read_only \u2717 mid int Moein id \u2717 code int Moein factor_No \u2717 type int pre: 0 buy: 1 sell: 2 \u2717 status int draft: 0 publish: 1 \u2713 created_at string(iso-8601) read_only \u2717 updated_at string(iso-8601) read_only \u2717 info string(500) \u2717 discount positive-int \u2713 discount_percent float \u2713 carry_price positive-int \u2713 driver_name string(100) \u2717 driver_tel string(50) \u2717 carry_info string(500) \u2717 carry_vehicle string(50) \u2717 carry_vehicle_plate string(50) \u2717 carry_vehicle_color string(50) \u2717 tel string(100) additional tel for customer \u2717 address string(255) additional address for customer \u2717 person int Person mid, customer \u2717 temp_person int TempPerson id, customer \u2717 visitor int Person mid \u2717 driver int Person mid \u2717 user int User id, read_only \u2717 total int read_only \u2717 items_sum int read_only \u2717 items_total int read_only \u2717 items_net int read_only \u2717 items_discount int read_only \u2717 remain int read_only \u2717 tax int read_only \u2717 tax_percent float read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 InvoiceItem Table: Attribute Type Description Required id int primary_key, read_only \u2717 price positive-int unit price \u2713 quantity1 int \u2713 quantity2 int \u2713 discount positive-int \u2713 discount_percent float \u2713 discount_per_item positive-int \u2713 info string(500) \u2717 product int Product mid \u2713 repository int Repository mid \u2713 price_level int PriceLevel mid \u2713 unit2_in_unit1 int read_only \u2717 quantity int q2 + (q1 * u2_in_u1) \u2717 sum int read_only \u2717 net int read_only \u2717 tax int read_only \u2717 total int read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 1- Retrieving An Invoice: Details: Method GET Endpoint /api/all_invoices_mid_base/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/all_invoices_mid_base/66') 2- Updating An Invoice: Details: Method PUT Endpoint /api/all_invoices_mid_base/{mid} Success code 200 Failure code 400 Example: data = { 'status': 1, 'visitor': 109, 'person': 78, 'items': [ { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.put('http://domain/api/all_invoices_mid_base/66', json=data) 3- Deleting An Invoice: Details: Method DELETE Endpoint /api/all_invoices_mid_base/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/all_invoices_mid_base/66')","title":"all_invoice_mid"},{"location":"pages/invoice/invoice/","text":"Invoice Table: Attribute Type Description Required id int primary_key, read_only \u2717 mid int Moein id \u2717 code int Moein factor_No \u2717 type int pre: 0 buy: 1 sell: 2 \u2717 status int draft: 0 publish: 1 \u2713 created_at string(iso-8601) read_only \u2717 updated_at string(iso-8601) read_only \u2717 info string(500) \u2717 discount positive-int \u2713 discount_percent float \u2713 carry_price positive-int \u2713 driver_name string(100) \u2717 driver_tel string(50) \u2717 carry_info string(500) \u2717 carry_vehicle string(50) \u2717 carry_vehicle_plate string(50) \u2717 carry_vehicle_color string(50) \u2717 tel string(100) additional tel for customer \u2717 address string(255) additional address for customer \u2717 person int Person mid, customer \u2717 temp_person int TempPerson id, customer \u2717 visitor int Person mid \u2717 driver int Person mid \u2717 user int User id, read_only \u2717 total int read_only \u2717 items_sum int read_only \u2717 items_total int read_only \u2717 items_net int read_only \u2717 items_discount int read_only \u2717 remain int read_only \u2717 tax int read_only \u2717 tax_percent float read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 InvoiceItem Table: Attribute Type Description Required id int primary_key, read_only \u2717 price positive-int unit price \u2713 quantity1 int \u2713 quantity2 int \u2713 discount positive-int \u2713 discount_percent float \u2713 discount_per_item positive-int \u2713 info string(500) \u2717 product int Product mid \u2713 repository int Repository mid \u2713 price_level int PriceLevel mid \u2713 unit2_in_unit1 int read_only \u2717 quantity int q2 + (q1 * u2_in_u1) \u2717 sum int read_only \u2717 net int read_only \u2717 tax int read_only \u2717 total int read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 1- Creating An Invoice: Details: Method POST Endpoint /api/invoices Success code 201 Failure code 400 Example: data = { 'status': 0, 'discount': 1000, 'discount_percent': 0.0, 'carry_price': 100, 'visitor': 109, 'person': 78, 'info': 'invoice information', 'items': [ { 'price': 100, 'quantity1': 0, 'quantity2': 5, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'info': 'some info', 'product': 9, 'repository': 1, 'price_level': 1 }, { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 40, 'discount_percent': 10.0, 'discount_per_item': 20, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.post('http://domain/api/invoices', json=data) 2- Listing Invoices: Details: Method GET Endpoint /api/invoices Success Code 200 Failure Code - Parameters Param Type Description limit int number per page offset int skip before beginning status int invoice status Example 1: r = requests.get('http://domain/api/invoices') Example 2: params = { 'limit': 50, 'offset': 10, 'status': 1 } r = requests.get('http://domain/api/invoices', params=params) 3- Retrieving An Invoice: Details: Method GET Endpoint /api/invoices/{id} Success Code 200 Failure Code 404 Example: r = requests.get('http://domain/api/invoices/66') 4- Updating An Invoice Details: Method PUT Endpoint /api/invoices/{id} Success Code 200 Failure Code 400 Example: data = { 'status': 1, 'visitor': 109, 'person': 78, 'items': [ { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.put('http://domain/api/invoices/66', json=data) 5- Deleting An Invoice: Details: Method DELETE Endpoint /api/invoices/{id} Success Code 204 Failure Code 404 Example: r = requests.delete('http://domain/api/invoices/66') 6- Searching For Invoices Details: Method GET Endpoint /api/invoices/search Success Code 200 Failure Code - Parameters: Param Type Description id int invoice id mid int moein id code int moein code name string person name Example 1: params = { 'id': 66 } r = requests.get('http://domain/api/invoices/search', params=params) Example 2: params = { 'name': 'kaveh mehrbanian' } r = requests.get('http://domain/api/invoices/search', params=params) 7- Listing Invoice Items Details: Method GET Endpoint /api/invoices/{id}/items Success Code 200 Failure Code 404 Example: r = requests.get('http://domain/api/invoices/66/items') 8- Adding A New Item To Invoice Details: Method POST Endpoint /api/invoices/{id}/items Success Code 201 Failure Code 400 Example: data = { 'price': 1000, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'info': 'some info about new item', 'product': 20, 'repository': 2, 'price_level': 1 } r = requests.post('http://domain/api/invoices/66/items', json=data) 9- Getting An Invoice Item: Details: Method GET Endpoint /api/invoices/{invoice_id}/items/{item_id} Success Code 200 Failure Code 404 Example: r = requests.get('http://domain/api/invoices/66/items/6') 10- Updating An Invoice Item: Details: Method PUT Endpoint /api/invoices/{invoice_id}/items/{item_id} Success Code 200 Failure Code 400 Example: data = { 'price': 2000, 'quantity2': 13, 'info': 'some info about updated item' } r = requests.put('http://domain/api/invoices/66/items/6', json=data) 11- Deleting An Invoice Item: Details: Method DELETE Endpoint /api/invoices/{invoice_id}/items/{item_id} Success Code 200 Failure Code 404 Example: r = requests.delete('http://domain/api/invoices/66/items/6')","title":"invoice"},{"location":"pages/invoice/pre_invoice/","text":"Invoice Table: Attribute Type Description Required id int primary_key, read_only \u2717 mid int Moein id \u2717 code int Moein factor_No \u2717 type int pre: 0 buy: 1 sell: 2 \u2717 status int draft: 0 publish: 1 \u2713 created_at string(iso-8601) read_only \u2717 updated_at string(iso-8601) read_only \u2717 info string(500) \u2717 discount positive-int \u2713 discount_percent float \u2713 carry_price positive-int \u2713 driver_name string(100) \u2717 driver_tel string(50) \u2717 carry_info string(500) \u2717 carry_vehicle string(50) \u2717 carry_vehicle_plate string(50) \u2717 carry_vehicle_color string(50) \u2717 tel string(100) additional tel for customer \u2717 address string(255) additional address for customer \u2717 person int Person mid, customer \u2717 temp_person int TempPerson id, customer \u2717 visitor int Person mid \u2717 driver int Person mid \u2717 user int User id, read_only \u2717 total int read_only \u2717 items_sum int read_only \u2717 items_total int read_only \u2717 items_net int read_only \u2717 items_discount int read_only \u2717 remain int read_only \u2717 tax int read_only \u2717 tax_percent float read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 InvoiceItem Table: Attribute Type Description Required id int primary_key, read_only \u2717 price positive-int unit price \u2713 quantity1 int \u2713 quantity2 int \u2713 discount positive-int \u2713 discount_percent float \u2713 discount_per_item positive-int \u2713 info string(500) \u2717 product int Product mid \u2713 repository int Repository mid \u2713 price_level int PriceLevel mid \u2713 unit2_in_unit1 int read_only \u2717 quantity int q2 + (q1 * u2_in_u1) \u2717 sum int read_only \u2717 net int read_only \u2717 tax int read_only \u2717 total int read_only \u2717 visitor_price int read_only \u2717 visitor_percent float read_only \u2717 1- Creating PreInvoice: Details: Method POST Endpoint /api/invoices/ Success code 201 Failure code 400 Example: data = { 'status': 0, 'discount': 1000, 'discount_percent': 0.0, 'carry_price': 100, 'visitor': 109, 'person': 78, 'info': 'pre_invoice information', 'items': [ { 'price': 100, 'quantity1': 0, 'quantity2': 5, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'info': 'some info', 'product': 9, 'repository': 1, 'price_level': 1 }, { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 40, 'discount_percent': 10.0, 'discount_per_item': 20, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.post('http://domain/api/invoices', json=data) 2- Listing PreInvoices: Details: Method GET Endpoint /api/pre_invoices Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning status int pre_invoice status Example 1: r = requests.get('http://domain/api/pre_invoices') Example 2: params = { 'limit': 50, 'offset': 10, 'status': 1 } r = requests.get('http://domain/api/pre_invoices', params=params) 3- Retrievng A PreInvoice: Details: Method GET Endpoint /api/pre_invoices/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/pre_invoices/66') 4- Update A PreInvoice Details: Method PUT Endpoint /api/pre_invoices/{id} Success code 200 Failure code 400 Example: data = { 'status': 1, 'visitor': 109, 'person': 78, 'items': [ { 'price': 200, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'product': 56, 'repository': 2, 'price_level': 1 } ] } r = requests.put('http://domain/api/pre_invoices/66', json=data) 5- Deleting A PreInvoice: Details: Method DELETE Endpoint /api/pre_invoices/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/pre_invoices/66') 6- Searching For A PreInvoices: Details: Method GET Endpoint /api/pre_invoices/search Success code 200 Failure code - Parameters Param Type Description id int pre_invoice id mid int moein id code int moein code name string person name Example 1: params = { 'id': 66 } r = requests.get('http://domain/api/pre_invoices/search', params=params) Example 2: params = { 'name': 'kaveh mehrbanian' } r = requests.get('http://domain/api/pre_invoices/search', params=params) 7- Listing PreInvoice Items: Details: Method GET Endpoint /api/pre_invoices/{id}/items Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/pre_invoices/66/items') 8- Adding A New Item To PreInvoices: Details: Method POST Endpoint /api/pre_invoices/{id}/items Success code 201 Failure code 400 Example: data = { 'price': 1000, 'quantity1': 0, 'quantity2': 2, 'discount': 0, 'discount_percent': 0.0, 'discount_per_item': 0, 'info': 'some info about new item', 'product': 20, 'repository': 2, 'price_level': 1 } r = requests.post('http://domain/api/pre_invoices/66/items', json=data) 9- Retrieving A PreInvoice Item: Details: Method GET Endpoint /api/pre_invoices/{invoice_id}/items/{item_id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/pre_invoices/66/items/6') 10- Updating A PreInvoice Item: Details: Method PUT Endpoint /api/pre_invoices/{invoice_id}/items/{item_id} Success code 200 Failure code 400 Example: data = { 'price': 2000, 'quantity2': 13, 'info': 'some info about updated item' } r = requests.put('http://domain/api/pre_invoices/66/items/6', json=data) 11- Deleting A PreInvoice Item: Details: Method DELETE Endpoint /api/pre_invoices/{invoice_id}/items/{item_id} Success code 200 Failure code 404 Example: r = requests.delete('http://domain/api/pre_invoices/66/items/6')","title":"pre_invoice"},{"location":"pages/invoice/invoice/retrive_invoice/","text":"Retrieving A invoice ================================= --method: GET --endpoint: /api/invoices/{id} --success-code: 200 --failure-code: 404 --example: r = requests.get('http://domain/api/invoices/66')","title":"Retrive invoice"},{"location":"pages/log/log/","text":"Log Table Attribute Type Description Required id int primary_key, read_only \u2717 action int delete: 1 insert: 2 update: 3 \u2713 subject int person: 12 pre_invoice: 100 invoice: 102 temp_person: 102 \u2713 object_id int \u2713 mid int \u2717 LogMeta Table Attribute Type Description Required id int primary_key, read_only \u2717 key string(255) \u2713 value string(255) \u2713 1- Listing Logs: Details: Method GET Endpoint /api/logs Success code 200 Failure code - Example: r = requests.get('http://domain/api/logs') 2- Deleting A Log: Details: Method DELETE Endpoint /api/logs/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/logs/66')","title":"log"},{"location":"pages/person/person/","text":"Person Table Attribute Type Description Required mid int Moein id \u2713 code int Moein code \u2713 first_name string(50) \u2717 last_name string(50) \u2717 name string(255) \u2717 name_prefix string(50) mr, mrs, ... \u2717 economy_code string(50) \u2717 national_code string(11) \u2717 site string(200) \u2717 email string(255) \u2717 job string(50) \u2717 info string(500) \u2717 active bool \u2717 group int person group mid \u2717 buy_price_level int price level mid \u2717 sell_price_level int price level mid \u2717 company string(200) \u2717 company_registration_code string(50) \u2717 company_address string(200) \u2717 province string(50) \u2717 city string(50) \u2717 zip_code string(50) \u2717 address string(200) \u2717 bank_account string(50) \u2717 bank_cart string(50) \u2717 visitor bool is visitor? \u2713 visitor_percent float \u2717 courier bool is courier? \u2713 delivery_price int \u2717 1- Creating A Person: Details: Method POST Endpoint /api/persons Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'code': 1000, 'first_name': 'kaveh', 'last_name': 'mehrbanian', 'name': 'kaveh mehrbanian', 'email': 'mehrbaniankaveh@gmail.com', 'active': True, 'group': 10, 'sell_price_level': 1, 'buy_price_level': 1, 'address': 'some address', 'visitor': True, 'visitor_percent': 10.0, 'courier': False, } r = requests.post('http://domain/api/persons', json=data) 2- Listing Persons: Details: Method GET Endpoint /api/persons Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning active bool group int person group mid visitor bool courier bool Example 1: r = requests.get('http://domain/api/persons') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/persons', params=params) Example 3: params = { 'limit': 100, 'group': 10, 'active': True } r = requests.get('http://domain/api/persons', params=params) Example 4: params = { 'visitor': True } r = requests.get('http://domain/api/persons', params=params) Example 5: params = { 'active': True, 'group': 20, 'courier': False } r = requests.get('http://domain/api/persons', params=params) 3- Retrieving A Person: Details: Method GET Endpoint /api/persons/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/persons/66') 4- Updating A Person: Details: Method PUT Endpoint /api/persons/{mid} Success code 200 Failure code 400 Example: data = { 'first_name': 'some first', 'last_name': 'some last', 'group': None } r = requests.put('http://domain/api/persons/66', json=data) 5- Deleting A Person: Details: Method DELETE Endpoint /api/persons/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/persons/66') 6- Searching For A Person: Details: Method GET Endpoint /api/persons/search Success code 200 Failure code - Parameters Param Type Description q string all fields code int name string tels string Example 1: params = { 'q': 'some keyword' } r = requests.get('http://domain/api/persons/search', params=params) Example 2: params = { 'tels': '123456789' } r = requests.get('http://domain/api/persons/search', params=params)","title":"person"},{"location":"pages/person/person_group/","text":"PersonGroup Table Attribute Type Description Required mid int Moein id \u2713 name string(50) \u2713 parent int person group mid \u2717 1- Creating A PersonGroup: Details: Method POST Endpoint /api/person_groups Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'name': 'new person group', 'parent': 500 } r = requests.post('http://domain/api/person_groups', json=data) 2- Listing PersonGroups: Details: Method GET Endpoint /api/person_groups Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/person_groups') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/person_groups', params=params) 3- Retrieving A PersonGroup Details: Method GET Endpoint /api/person_groups/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/person_groups/66') 4- Updating A PersonGroup Details: Method PUT Endpoint /api/person_groups/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name' } r = requests.put('http://domain/api/person_groups/66', json=data) 5- Deleting A PersonGroup Details: Method DELETE Endpoint /api/person_groups/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/person_groups/66')","title":"person_group"},{"location":"pages/person/person_tel/","text":"PersonTel Table Attribute Type Description Required mid int Moein id \u2713 tel string(50) \u2713 caption string(50) phone, mobile, fax, ... \u2717 person int person mid \u2713 1- Create A PersonTel Details: Method POST Endpoint /api/person_tels Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'tel': '123456789', 'caption': 'mobile', 'person': 100 } r = requests.post('http://domain/api/person_tels', json=data) 2- Listing PersonTels Details: Method GET Endpoint /api/person_tels Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/person_tels') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/person_tels', params=params) 3- Retrieving PersonTel Details: Method GET Endpoint /api/person_tels/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/person_tels/66') 4- Updating PersonTel Details: Method PUT Endpoint /api/person_tels/{mid} Success code 200 Failure code 400 Example: data = { 'tel': '0987654321' } r = requests.put('http://domain/api/person_tels/66', json=data) 5- Deleting PersonTel Details: Method DELETE Endpoint /api/person_tels/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/person_tels/66')","title":"person_tel"},{"location":"pages/person/portion/","text":"Portion Table Attribute Type Description Required mid int Moein id \u2713 person int person mid \u2713 product int product mid \u2713 percentage float percentage for person on product \u2713 1- Creating A Portion: Details: Method POST Endpoint /api/portions Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'person': 100, 'product': 600, 'percentage': 10.0 } r = requests.post('http://domain/api/portions', json=data) 2- Listing Portions: Details: Method GET Endpoint /api/portions Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/portions') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/portions', params=params) 3- Retrieving A Portion: Details: Method GET Endpoint /api/portions/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/portions/66') 4- Updating A Portion: Details: Method PUT Endpoint /api/portions/{mid} Success code 200 Failure code 400 Example: data = { 'percentage': 14.2 } r = requests.put('http://domain/api/portions/66', json=data) 5- Deleting A Portion: Details: Method DELETE Endpoint /api/portions/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/portions/66')","title":"portion"},{"location":"pages/person/temp_person/","text":"TempPerson Table Attribute Type Description Required id int primary_key, read_only \u2717 first_name string(50) \u2713 last_name string(50) \u2713 name_prefix string(50) \u2713 economy_code string(50) \u2717 national_code string(11) \u2717 site string(200) \u2717 email string(255) \u2717 job string(50) \u2717 info string(500) \u2717 group int person group mid \u2717 buy_price_level int price level mid \u2717 sell_price_level int price level mid \u2717 company string(200) \u2717 company_registration_code string(50) \u2717 company_address string(200) \u2717 province string(50) \u2717 city string(50) \u2717 zip_code string(50) \u2717 address string(200) \u2717 bank_account string(50) \u2717 bank_card string(50) \u2717 remain int can be (-)negative or (+)positive \u2717 TempPersonTel Table Attribute Type Description Required id int primary_key, read_only \u2717 tel string(50) \u2713 caption string(50) phone, mobile, fax, ... \u2717 1-Creating A TempPerson Details: Method POST Endpoint /api/temp_persons Success code 201 Failure code 400 Example: data = { 'first_name': 'kaveh', 'last_name': 'mehrbanian', 'name_prefix': 'mr', 'email': 'mehrbaniankaveh@gmail.com', 'group': 10, 'sell_price_level': 1, 'buy_price_level': 1, 'address': 'some address', 'tels': [ {'tel': '123456789', 'caption': 'mobile'}, {'tel': '666777890', 'caption': 'desk'} ], 'remain': -5500 } r = requests.post('http://domain/api/temp_persons', json=data) 2- Listing TempPersons Details: Method GET Endpoint /api/temp_persons Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/temp_persons') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/temp_persons', params=params) 3- Retrieving A TempPerson Details: Method GET Endpoint /api/temp_persons/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/temp_persons/66') 4- Updating A TempPerson Details: Method PUT Endpoint /api/temp_persons/{id} Success code 200 Failure code 400 Example: data = { 'first_name': 'some first', 'last_name': 'some last', 'group': None } r = requests.put('http://domain/api/temp_persons/66', json=data) 5- Deleting A TempPerson Details: Method DELETE Endpoint /api/temp_persons/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/temp_persons/66') 6- Converting A TempPerson Details: Method PUT Endpoint /api/temp_persons/{id}/convert Success code 200 Failure code 400 Example: data = { 'mid': 16, 'code': 9 } r = requests.put('http://domain/api/temp_persons/66/convert', json=data)","title":"temp_person"},{"location":"pages/product/barcode/","text":"Barcode Table Attribute Type Description Required mid int Moein id \u2713 product int product mid \u2713 text string(100) barcode value \u2713 1- Creating A Barcode Details: Method POST Endpoint /api/barcodes Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'product': 500, 'text': '123456789abcdef' } r = requests.post('http://domain/api/barcodes', json=data) 2- Listing Barcodes Details: Method GET Endpoint /api/barcodes Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/barcodes') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/barcodes', params=params) 3- Retrieving A Barcode Method GET Endpoint /api/barcodes/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/barcodes/66') 4- Updating A Barcode Method PUT Endpoint /api/barcodes/{mid} Success code 200 Failure code 400 Example: data = { 'text': 'somenewbarcodevalue' } r = requests.put('http://domain/api/barcodes/66', json=data) 5- Deleting A Barcode Method DELETE Endpoint /api/barcodes/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/barcodes/66')","title":"barcode"},{"location":"pages/product/price/","text":"Price Table Attribute Type Description Required mid int Moein id \u2713 product int product mid \u2713 price_level int price_level mid \u2713 price_type int buy: 1 sell: 2 \u2713 price positive-int \u2713 discount_percent float \u2713 discount_value positive-int \u2713 final_price positive-int \u2713 1- Creating A Price Details: Method POST Endpoint /api/prices Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'product': 500, 'price_level': 1, 'price_type': 2, 'price': 1000000, 'discount_percent': 10.0, 'discount_value': 100000, 'final_price': 900000 } r = requests.post('http://domain/api/prices', json=data) 2- Listing Prices Details: Method GET Endpoint /api/prices Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/prices') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/prices', params=params) 3- Retrieving A Price Details: Method GET Endpoint /api/prices/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/prices/66') 4- Updating A Price Details: Method PUT Endpoint /api/prices/{mid} Success code 200 Failure code 400 Example: data = { 'discount_percent': 20.0, 'discount_value': 200000 'final_price': 800000 } r = requests.put('http://domain/api/prices/66', json=data) 5- Deleting A Price Details: Method DELETE Endpoint /api/prices/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/prices/66')","title":"price"},{"location":"pages/product/price_level/","text":"PriceLevel Table Attribute Type Description Required mid int Moein id \u2713 name string(50) \u2713 1- Creating A PriceLevel Details: Method POST Endpoint /api/price_levels Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'name': 'new price level' } r = requests.post('http://domain/api/price_levels', json=data) 2- Listing PriceLevels Details: Method GET Endpoint /api/price_levels Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/price_levels') Example 1: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/price_levels', params=params) 3- Retrieving A PriceLevel Details: Method GET Endpoint /api/price_levels/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/price_levels/66') 4- Updating A PriceLevel Details: Method PUT Endpoint /api/price_levels/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name' 'parent': 400 } r = requests.put('http://domain/api/price_levels/66', json=data) 5- Deleting A PriceLevel Details: Method DELETE Endpoint /api/price_levels/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/price_levels/66')","title":"price_level"},{"location":"pages/product/product/","text":"Product Table Attribute Type Description Required mid int Moein id \u2713 code int Moein code \u2713 name string(255) \u2713 active bool \u2713 info string(500) \u2717 category int product_category mid \u2717 unit_type int single: 0 dual1: 1 dual2: 2 \u2713 unit1 string(50) \u2717 unit2 string(50) \u2713 unit2_in_unit1 int \u2717 taxable bool \u2713 visitor_percent float \u2717 Quantity Table Attribute Type Description Required quantity int \u2713 repository int repository mid \u2713 1- Creating A Product Details: Method POST Endpoint /api/products Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'code': 1000, 'name': 'new product', 'active': True, 'info': 'some information about product', 'category': 100, 'unit_type': 0, 'unit2': 'box', 'taxable': True, 'visitor_percent': 5.0 } r = requests.post('http://domain/api/products', json=data) 2- Listing Product Details: Method GET Endpoint /api/products Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning active bool category int product_category mid Example 1: r = requests.get('http://domain/api/products') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/products', params=params) Example 3: params = { 'limit': 100, 'category': 10, 'active': True } r = requests.get('http://domain/api/products', params=params) 3- Retrieving A Product Details: Method GET Endpoint /api/products/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/products/66') 4- Updating A Product Details: Method PUT Endpoint /api/products/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name', 'info': 'new description', 'category': None, } r = requests.put('http://domain/api/products/66', json=data) 5- Deleting A Product Details: Method DELETE Endpoint /api/products/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/products/66') 6- Searching For A Product Details: Method GET Endpoint /api/products/search Success code 200 Failure code - Parameters Param Type Description q string all fields code int name string info string barcodes string Example 1: params = { 'q': 'some keyword' } r = requests.get('http://domain/api/products/search', params=params) Example 2: params = { 'barcodes': '123456' } r = requests.get('http://domain/api/products/search', params=params) 7- Listing Quantities Details: Method GET Endpoint /api/products/{mid}/quantities Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/products/66/quantities') 8- Updating A quantity Details: Method PUT Endpoint /api/products/{mid}/quantities Success code 200 Failure codes 400, 404 Example 1: data = [ { 'repository': 1, 'quantity': 1000 } ] r = requests.put('http://domain/api/products/66/quantities', json=data) Example 2: data = [ { 'repository': 1, 'quantity': 1000 }, { 'repository': 2, 'quantity, '2000, } ] r = requests.put('http://domain/api/products/66/quantities', json=data)","title":"product"},{"location":"pages/product/product_category/","text":"ProductCategory Table Attribute Type Description Required mid int Moein id \u2713 name string(100) \u2713 barcode_length int \u2717 parent int parent category mid \u2717 1- Creating A ProductCategory Details: Method POST Endpoint /api/product_categories Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'name': 'new category', 'barcode_length': 50, 'parent': 500 } r = requests.post('http://domain/api/product_categories', json=data) 2- Listing ProductCategories Details: Method GET Endpoint /api/product_categories Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/product_categories') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/product_categories', params=params) 3- Retrieving A ProductCategory Details: Method GET Endpoint /api/product_categories/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/product_categories/66') 4- Updating A ProductCategory Details: Method PUT Endpoint /api/product_categories/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name' } r = requests.put('http://domain/api/product_categories/66', json=data) 5- Deleting A ProductCategory Details: Method DELETE Endpoint /api/product_categories/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/product_categories/66')","title":"product_category"},{"location":"pages/product/repository/","text":"Repository Table Attribute Type Description Required mid int Moein id \u2713 name string(100) \u2713 1- Creating A Repository Details: Method POST Endpoint /api/repositories Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'name': 'new repo' } r = requests.post('http://domain/api/repositories', json=data) 2- Listing Repositories Details: Method GET Endpoint /api/repositories Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/repositories') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/repositories', params=params) 3- Retrieving A Repository Details: Method GET Endpoint /api/repositories/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/repositories/66') 4- Updating A Repository Details: Method PUT Endpoint /api/repositories/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name' } r = requests.put('http://domain/api/repositories/66', json=data) 5- Deleting A Repository Details: Method DELETE Endpoint /api/repositories/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/repositories/66')","title":"repository"},{"location":"pages/product/unit/","text":"Unit Table Attribute Type Description Required mid int Moein id \u2713 name string(50) \u2713 is_super bool \u2713 1- Creating A Unit Details: Method POST Endpoint /api/units Success code 201 Failure code 400 Example: data = { 'mid': 1000, 'name': 'new unit', 'is_super': False } r = requests.post('http://domain/api/units', json=data) 2- Listing Units Details: Method GET Endpoint /api/units Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/units') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/units', params=params) 3- Retrieving A Unit Details: Method GET Endpoint /api/units/{mid} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/units/66') 4- Updating A Unit Details: Method PUT Endpoint /api/units/{mid} Success code 200 Failure code 400 Example: data = { 'name': 'some new name' } r = requests.put('http://domain/api/units/66', json=data) 5- Deleting A Unit Details: Method DELETE Endpoint /api/units/{mid} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/units/66')","title":"unit"},{"location":"pages/user/group/","text":"Group Table Attribute Type Description Required id int primary_key, read_only \u2717 name string(150) \u2713 1- Creating A Group Details: Method POST Endpoint /api/groups Success code 201 Failure code 400 Example: data = { 'name': 'new group' } r = requests.post('http://domain/api/groups', json=data) 2- Listing Groups Details: Method GET Endpoint /api/groups Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/groups') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/groups', params=params) 3- Retrieving A Group Details: Method GET Endpoint /api/groups/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/groups/66') 4- Updating A Group Details: Method PUT Endpoint /api/groups/{id} Success code 200 Failure code 400 Example: data = { 'name': 'new name for group' } r = requests.put('http://domain/api/groups/66', json=data) 5- Deleting A Group Details: Method DELETE Endpoint /api/groups/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/groups/66') 6- Listing Group Permissions Details: Method GET Endpoint /api/groups/{id}/permissions Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/groups/66/permissions') 7- Adding A Group Permissions Details: Method PUT Endpoint /api/groups/{id}/permissions Success code 200 Failure codes 400, 404 Example: data = { 'permissions': [1, 2, 3] } r = requests.put('http://domain/api/groups/66/permissions', json=data) 8- Removing Group Permissions Details: Method DELETE Endpoint /api/groups/{id}/permissions Success code 200 Failure codes 400, 404 Example: data = { 'permissions': [2, 3] } r = requests.delete('http://domain/api/groups/66/permissions', json=data)","title":"group"},{"location":"pages/user/permission/","text":"Permission Table Attribute Type Description Required id int primary_key, read_only \u2717 codename string(150) \u2713 name string(150) \u2713 1- Listing Permissions Details: Method GET Endpoint /api/permissions Success code 200 Failure code - Example: r = requests.get('http://domain/api/permissions') 2- Retrieving A Permission Details: Method GET Endpoint /api/permissions/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/permissions/66')","title":"permission"},{"location":"pages/user/user/","text":"User Table Attribute Type Description Required id int primary_key, read_only \u2717 first_name string(150) \u2717 last_name string(150) \u2717 email string(150) \u2717 username string(150) \u2713 password string(150) write_only \u2713 person int Person mid, read_only \u2717 1- Signing Up A User Details: Method POST Endpoint /api/users/signup Success code 201 Failure code 400 Example: data = { 'first_name': 'kaveh', 'last_name': 'mehrbanian', 'username': 'kavehkm', 'password': 's3cret', 'email': 'mehrbaniankaveh@gmail.com' } r = requests.post('http://domain/api/users/signup', json=data) 2- User SignIn Details: Method POST Endpoint /api/users/signin Success code 200 Failure code 400 Example: data = { 'username': 'kavehkm', 'password': 's3cret' } r = requests.post('http://domain/api/users/signin', json=data) Sample Result: print(r.json()) { \"id\": 14, \"first_name\": \"kaveh\", \"last_name\": \"mehrbanian\", \"email\": \"mehrbaniankaveh@gmail.com\", \"username\": \"kavehkm\", \"person\": 66, \"groups\": [], \"permissions\": [], \"token\": \"b51297429d9d107a57488c1fa91d6c306e898729\" } Authorization: headers = { 'Authorization': 'Token b51297429d9d107a57488c1fa91d6c306e898729' } r = requests.get/post/put/delete('endpoint', headers=headers, json=data, params=params) 3- Listing Users Details: Method GET Endpoint /api/users Success code 200 Failure code - Parameters Param Type Description limit int number per page offset int skip before beginning Example 1: r = requests.get('http://domain/api/users') Example 2: params = { 'limit': 50, 'offset': 10 } r = requests.get('http://domain/api/users', params=params) 4- Retrieving A User Details: Method GET Endpoint /api/users/{id} Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/users/66') 5- Updating A User Details: Method PUT Endpoint /api/users/{id} Success code 200 Failure code 400 Example: data = { 'first_name': 'kaweh' } r = requests.put('http://domain/api/users/66', json=data) 6- Deleting A User Details: Method DELETE Endpoint /api/users/{id} Success code 204 Failure code 404 Example: r = requests.delete('http://domain/api/users/66') 7- Listing User Permissions Details: Method GET Endpoint /api/users/{id}/permissions Success code 200 Failure code 404 Example: r = requests.get('http://domain/api/users/66/permissions') 8- Adding User Permissions Details: Method PUT Endpoint /api/users/{id}/permissions Success code 200 Failure codes 400, 404 Example: data = { 'permissions': [1, 2, 3] } r = requests.put('http://domain/api/users/66/permissions', json=data) 9- Removing User Permissions Details: Method DELETE Endpoint /api/users/{id}/permissions Success code 200 Failure codes 400, 404 Example: data = { 'permissions': [2, 3] } r = requests.delete('http://domain/api/users/66/permissions', json=data)","title":"user"}]}